// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cri-o/cri-o/internal/watchdog (interfaces: Systemd)
//
// Generated by this command:
//
//	mockgen -package systemdmock -destination ./test/mocks/systemd/systemd.go github.com/cri-o/cri-o/internal/watchdog Systemd
//

// Package systemdmock is a generated GoMock package.
package systemdmock

import (
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockSystemd is a mock of Systemd interface.
type MockSystemd struct {
	ctrl     *gomock.Controller
	recorder *MockSystemdMockRecorder
	isgomock struct{}
}

// MockSystemdMockRecorder is the mock recorder for MockSystemd.
type MockSystemdMockRecorder struct {
	mock *MockSystemd
}

// NewMockSystemd creates a new mock instance.
func NewMockSystemd(ctrl *gomock.Controller) *MockSystemd {
	mock := &MockSystemd{ctrl: ctrl}
	mock.recorder = &MockSystemdMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSystemd) EXPECT() *MockSystemdMockRecorder {
	return m.recorder
}

// Notify mocks base method.
func (m *MockSystemd) Notify(arg0 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Notify", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Notify indicates an expected call of Notify.
func (mr *MockSystemdMockRecorder) Notify(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Notify", reflect.TypeOf((*MockSystemd)(nil).Notify), arg0)
}

// WatchdogEnabled mocks base method.
func (m *MockSystemd) WatchdogEnabled() (time.Duration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WatchdogEnabled")
	ret0, _ := ret[0].(time.Duration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// WatchdogEnabled indicates an expected call of WatchdogEnabled.
func (mr *MockSystemdMockRecorder) WatchdogEnabled() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WatchdogEnabled", reflect.TypeOf((*MockSystemd)(nil).WatchdogEnabled))
}
